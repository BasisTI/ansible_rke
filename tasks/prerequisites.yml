---
- name: Disable swap
  become: true
  command: swapoff -a
  changed_when: false

- name: Disable swap in fstab
  become: true
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
    mode: "0644"

- name: Enable kernel modules
  become: true
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ rke_kernel_modules }}"

- name: Sysctl settings
  become: true
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: '1'
    sysctl_file: /etc/sysctl.d/k8s.conf
    reload: yes
    state: present

- name: Put SELinux in permissive mode
  become: true
  selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == 'RedHat'
  register: selinux_state

- name: Ensure SELinux in permissive mode
  become: true
  command: setenforce permissive
  changed_when: false
  when: ansible_os_family == 'RedHat'

- name: Create user for deploy on RKE node
  become: true
  user:
    name: "{{ rke_user }}"
    generate_ssh_key: yes
    ssh_key_bits: 4096
    ssh_key_file: .ssh/id_rsa
    groups: docker
    append: yes
  register: rke_user_return
  run_once: yes
  delegate_to: "{{ rke_node }}"

- name: Create user for deploy on anothers nodes
  become: true
  user:
    name: "{{ rke_user }}"
    groups: docker
    append: yes

- name: Set rke variables
  set_fact:
    rke_config_dir: "{{ rke_user_return.home }}/rke"
    rke_ssh_key_file: "{{ rke_user_return.ssh_key_file }}"
    rke_ssh_public_key: "{{ rke_user_return.ssh_public_key }}"

- name: Copy the SSH public key
  become: true
  authorized_key:
    user: "{{ rke_user }}"
    key: "{{ rke_ssh_public_key }}"
    state: present

- name: Configure SSH daemon
  become: true
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^(#?(AllowTcpForwarding)\s(no|yes))$'
    replace: 'AllowTcpForwarding yes'
    mode: "0644"
  notify:
    - restart sshd
