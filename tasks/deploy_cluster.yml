---
- name: Download the RKE binary
  get_url:
    url: "{{ rke_binary_url }}"
    dest: /usr/local/bin/rke
    mode: "+rx"
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Ensure config directory exists
  file:
    path: "{{ rke_config_dir }}"
    state: directory
    owner: "{{ rke_user }}"
    group: "{{ rke_user }}"
    mode: "0755"
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Create the cluster configuration file
  template:
    src: cluster.yml.j2
    dest: "{{ rke_config_dir }}/cluster.yml"
    owner: "{{ rke_user }}"
    group: "{{ rke_user }}"
    mode: "0644"
  register: rke_cluster_config
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Deploy Kubernetes with RKE
  become: yes
  become_user: "{{ rke_user }}"
  shell: >
    set -o pipefail && \
      rke up | tee rke-up.log
  args:
    chdir: "{{ rke_config_dir }}"
  changed_when: false
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Check deploy Kubernetes with RKE
  lineinfile:
    path: "{{ rke_config_dir }}/rke-up.log"
    regexp: 'Finished building Kubernetes cluster successfully'
    state: absent
  check_mode: yes
  register: rke_up_successfully
  changed_when: false
  failed_when: rke_up_successfully is failed or not rke_up_successfully.found
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Ensure $HOME/.kube exists
  become: yes
  become_user: "{{ rke_user }}"
  file:
    path: "~/.kube"
    state: directory
    owner: "{{ rke_user }}"
    group: "{{ rke_user }}"
    mode: "0755"
  run_once: true
  delegate_to: "{{ rke_node }}"

- name: Copy kubeconfig to default location
  become: yes
  become_user: "{{ rke_user }}"
  copy:
    remote_src: yes
    src: "{{ rke_config_dir }}/kube_config_cluster.yml"
    dest: "~/.kube/config"
    owner: "{{ rke_user }}"
    group: "{{ rke_user }}"
    mode: "0644"
  run_once: true
  delegate_to: "{{ rke_node }}"
